// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  email    String  @unique
  password String
  token    String? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile      Profile?
  organization Organization?
}

model Profile {
  id        String @id @default(cuid())
  firstName String
  lastName  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Organization {
  id   String @id @default(cuid())
  slug String @unique
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownerId String @unique
  owner   User   @relation(fields: [ownerId], references: [id])

  currencyCode String
  currency     Currency @relation(fields: [currencyCode], references: [code])

  employees Employee[]
}

model Employee {
  id          String   @id @default(cuid())
  staffId     String   @unique
  firstName   String
  lastName    String
  basicSalary Float
  allowances  Json[]
  joinedAt    DateTime
  isArchived  Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])

  salaryPayments SalaryPayment[]
}

model SalaryPayment {
  id          String   @id @default(cuid())
  month       DateTime
  basicSalary Float
  allowances  Float
  additions   Float
  deductions  Float
  paymentDate DateTime @default(now())
  isGratuity  Boolean? @default(false)

  employeeId String
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model Currency {
  id     String @id @default(cuid())
  code   String @unique
  name   String
  symbol String

  organizations Organization[]
}
