// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  OWNER
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile                 Profile?
  organizationMemberships OrganizationMembership[]
}

model Profile {
  id        String @id @default(cuid())
  firstName String
  lastName  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Organization {
  id       String @id @default(cuid())
  slug     String @unique
  name     String
  currency String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  employees   Employee[]
  memberships OrganizationMembership[]
}

model OrganizationMembership {
  id   String @id @default(cuid())
  role String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])

  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@map("OrganizationMember")
}

model Employee {
  id          String @id @default(cuid())
  staffId     String @unique
  firstName   String
  lastName    String
  basicSalary Float
  allowances  Json[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])

  salaryPayments SalaryPayment[]
}

model SalaryPayment {
  id          String @id @default(cuid())
  month       Int
  year        Int
  basicSalary Float
  allowances  Float

  employeeId String
  employee   Employee @relation(fields: [employeeId], references: [id])
}
